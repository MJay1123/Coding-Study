정수로 이루어진 배열 numbers가 있습니다. 배열 의 각 원소들에 대해 자신보다 뒤에 있는 숫자 중에서 자신보다 크면서 가장 가까이 있는 수를 뒷 큰수라고 합니다.
정수 배열 numbers가 매개변수로 주어질 때, 모든 원소에 대한 뒷 큰수들을 차례로 담은 배열을 return 하도록 solution 함수를 완성해주세요. 단, 뒷 큰수가 존재하지 않는 원소는 -1을 담습니다.

제한사항
4 ≤ numbers의 길이 ≤ 1,000,000
1 ≤ numbers[i] ≤ 1,000,000
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
import java.util.*;

class Solution {
    static Stack<Integer> numberStack = new Stack<>();
    static Stack<Integer> indexStack = new Stack<>();
    public int[] solution(int[] numbers) {
        int[] answer = new int[numbers.length];
        numberStack.push(numbers[0]);
        indexStack.push(0);
        
        for(int i=1; i<numbers.length; i++){
            insertNumber(numbers[i], i, answer);
        }
        while(!numberStack.isEmpty()){
            numberStack.pop();
            int peekIndex = indexStack.pop();
            answer[peekIndex] = -1;
        }
        return answer;
    }
    
    public void insertNumber(int number, int index, int[] answer){
        while(!numberStack.isEmpty()){
            int peekNumber = numberStack.peek();
            if(peekNumber < number){
                numberStack.pop();                      // stack의 숫자 제거
                int peekIndex = indexStack.pop();
                answer[peekIndex] = number;             // 제거된 숫자의 인덱스부분에 큰 값 삽입(뒤에 있는 큰 수)
            } else {
                break;
            }
        }
        numberStack.push(number);
        indexStack.push(index);
    }
}
