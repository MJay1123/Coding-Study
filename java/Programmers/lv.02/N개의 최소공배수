두 수의 최소공배수(Least Common Multiple)란 입력된 두 수의 배수 중 공통이 되는 가장 작은 숫자를 의미합니다.
예를 들어 2와 7의 최소공배수는 14가 됩니다. 정의를 확장해서, n개의 수의 최소공배수는 n 개의 수들의 배수 중 공통이 되는 가장 작은 숫자가 됩니다.
n개의 숫자를 담은 배열 arr이 입력되었을 때 이 수들의 최소공배수를 반환하는 함수, solution을 완성해 주세요.

제한 사항
arr은 길이 1이상, 15이하인 배열입니다.
arr의 원소는 100 이하인 자연수입니다.
--------------------------------------------------------------------------------------------------------------------------------------------
import java.util.*;
class Solution {
    public int solution(int[] arr) {
        int answer = 1;
        boolean[] primes = makePrime();
        HashMap<Integer, Integer> map = new HashMap<>();
        for(int i=2; i<=100; i++){
            if(!primes[i]){
                map.put(i, 0);
            }
        }
        for(int i=0; i<arr.length; i++){
            HashMap<Integer, Integer> newMap = getPrimeMap(arr[i]);
            for(int prime : newMap.keySet()){
                map.replace(prime, Math.max(map.get(prime), newMap.get(prime)));
            }
        }
        for(int num : map.keySet()){
            answer *= (int)Math.pow(num, map.get(num));
        }
        return answer;
    }
    
    public HashMap<Integer, Integer> getPrimeMap(int number){
        HashMap<Integer, Integer> map = new HashMap<>();
        List<Integer> primeList = makePrimeList();
        while(number > 1){
            for(int prime : primeList){
                if(number % prime == 0){
                    number /= prime;
                    putNumber(map, prime);
                    break;
                }
            }
        }
        return map;
    }
    
    public void putNumber(HashMap<Integer, Integer> map, int number){
        if(map.containsKey(number)){
            map.replace(number, map.get(number) + 1);
        } else {
            map.put(number, 1);
        }
    }
    
    public List<Integer> makePrimeList(){
        boolean[] prime = makePrime();
        List<Integer> list = new ArrayList<>();
        for(int i=2; i<prime.length; i++){
            if(prime[i] == false){
                list.add(i);
            }
        }
        return list;
    }
    
    public boolean[] makePrime(){
        boolean[] prime = new boolean[101];
        for(int i=2; i<10; i++){
            if(prime[i] == false){
                for(int j=2; i*j<101; j++){
                    prime[i*j] = true;
                }
            }
        }
        return prime;
    }
}
